import{l as S,s as l,V as w}from"./index-DMTdQ3St.js";import{g as v}from"./helpers-kgrKKtTT.js";const b=S((t,d)=>({invoices:[],selectedInvoice:null,invoiceItems:[],invoiceHistory:[],loading:!1,error:null,fetchInvoices:async n=>{try{t({loading:!0,error:null});const{data:e,error:r}=await l.from("invoices").select(`
          *,
          clients:client_id (
            id,
            name,
            company_name,
            email,
            phone,
            billing_address
          )
        `).eq("user_id",n).order("created_at",{ascending:!1});if(r)throw r;t({invoices:e||[]})}catch(e){console.error("Error fetching invoices:",e),t({error:e.message})}finally{t({loading:!1})}},fetchInvoice:async n=>{try{t({loading:!0,error:null});const{data:e,error:r}=await l.from("invoices").select(`
          *,
          clients:client_id (
            id,
            name,
            company_name,
            email,
            phone,
            billing_address,
            gst_number
          )
        `).eq("id",n).single();if(r)throw r;t({selectedInvoice:e})}catch(e){console.error("Error fetching invoice:",e),t({error:e.message})}finally{t({loading:!1})}},fetchInvoiceItems:async n=>{try{t({loading:!0,error:null});const{data:e,error:r}=await l.from("invoice_items").select("*").eq("invoice_id",n);if(r)throw r;t({invoiceItems:e||[]})}catch(e){console.error("Error fetching invoice items:",e),t({error:e.message})}finally{t({loading:!1})}},fetchInvoiceHistory:async n=>{try{t({loading:!0,error:null});const e=d().selectedInvoice;if(e){const r=[{timestamp:e.created_at||new Date().toISOString(),action:"created",details:{status:"draft"}}];e.status!=="draft"&&r.push({timestamp:new Date(new Date(e.created_at||"").getTime()+36e5).toISOString(),action:"status_changed",details:{status:"sent"}}),(e.status==="paid"||e.status==="partially_paid")&&r.push({timestamp:e.payment_date||new Date().toISOString(),action:"payment_recorded",details:{status:e.status,payment_method:e.payment_method,amount:e.status==="partially_paid"?e.partially_paid_amount:e.total}}),r.sort((a,c)=>new Date(c.timestamp).getTime()-new Date(a.timestamp).getTime()),t({invoiceHistory:r})}}catch(e){console.error("Error fetching invoice history:",e),t({error:e.message})}finally{t({loading:!1})}},generateInvoiceNumber:async n=>{try{const{data:e}=await l.from("invoices").select("invoice_number").eq("user_id",n).order("created_at",{ascending:!1}).limit(1);let r;if(e&&e.length>0&&e[0].invoice_number){const c=e[0].invoice_number.split("-");if(c.length>=4){const s=c[1],i=c[2],p=parseInt(c[3],10),o=new Date,u=o.getFullYear().toString(),m=(o.getMonth()+1).toString().padStart(2,"0");if(s===u&&i===m){const y=(p+1).toString().padStart(3,"0");r=`INV-${u}-${m}-${y}`}else r=`INV-${u}-${m}-001`}else r=v("INV",n)}else r=v("INV",n);return r}catch(e){return console.error("Error generating invoice number:",e),v("INV")}},createInvoice:async(n,e)=>{try{t({loading:!0,error:null});const{data:r,error:a}=await l.from("invoices").insert([n]).select().single();if(a)throw a;if(r){let c;if(n.engagement_type==="milestone")c=e.map(i=>({invoice_id:r.id,milestone_name:typeof i.name=="string"?i.name:i.milestone_name||"Milestone",description:null,quantity:1,rate:typeof i.amount=="number"?i.amount:parseFloat(i.amount)||0,amount:typeof i.amount=="number"?i.amount:parseFloat(i.amount)||0}));else if(n.engagement_type==="retainership"){const i=e[0];c=[{invoice_id:r.id,description:i.description||"Monthly Retainer Fee",quantity:1,rate:i.rate||0,amount:i.amount||0,retainer_period:n.retainer_period||null}]}else if(n.engagement_type==="project"){const i=e[0];c=[{invoice_id:r.id,description:i.description||"Project Fee",quantity:1,rate:i.rate||0,amount:i.amount||0,project_description:n.project_description||null}]}else c=e.map(i=>({invoice_id:r.id,description:i.description,quantity:i.quantity,rate:i.rate,amount:i.amount}));const{error:s}=await l.from("invoice_items").insert(c);if(s)throw s;return n.user_id&&await d().fetchInvoices(n.user_id),r}return null}catch(r){return console.error("Error creating invoice:",r),t({error:r.message}),w.error("Failed to create invoice: "+r.message),null}finally{t({loading:!1})}},updateInvoice:async(n,e,r)=>{try{t({loading:!0,error:null});const{data:a,error:c}=await l.from("invoices").update(e).eq("id",n).select().single();if(c)throw c;if(r&&a){const{error:s}=await l.from("invoice_items").delete().eq("invoice_id",n);if(s)throw s;let i;if(e.engagement_type==="milestone")i=r.map(o=>({invoice_id:n,milestone_name:typeof o.name=="string"?o.name:o.milestone_name||"Milestone",description:null,quantity:1,rate:typeof o.amount=="number"?o.amount:parseFloat(o.amount)||0,amount:typeof o.amount=="number"?o.amount:parseFloat(o.amount)||0}));else if(e.engagement_type==="retainership"||e.engagement_type==="project"){const o=r[0];i=[{invoice_id:n,description:o.description||(e.engagement_type==="project"?"Project Fee":"Monthly Retainer Fee"),quantity:1,rate:o.rate||0,amount:o.amount||0,retainer_period:e.engagement_type==="retainership"&&e.retainer_period||null,project_description:e.engagement_type==="project"&&e.project_description||null}]}else i=r.map(o=>({invoice_id:n,description:o.description,quantity:o.quantity,rate:o.rate,amount:o.amount}));const{error:p}=await l.from("invoice_items").insert(i);if(p)throw p}if(a){const s=d().invoices.map(i=>i.id===n?a:i);return t({invoices:s,selectedInvoice:a}),a}return null}catch(a){return console.error("Error updating invoice:",a),t({error:a.message}),w.error("Failed to update invoice: "+a.message),null}finally{t({loading:!1})}},updateInvoiceStatus:async(n,e)=>{var r,a,c;try{t({loading:!0,error:null});let s={status:e};e==="paid"&&!((r=d().selectedInvoice)!=null&&r.payment_date)&&(s.payment_date=new Date().toISOString().split("T")[0]),e==="sent"&&((a=d().selectedInvoice)==null?void 0:a.status)==="draft"&&((c=d().selectedInvoice)!=null&&c.issue_date||(s.issue_date=new Date().toISOString().split("T")[0]));const{error:i}=await l.from("invoices").update(s).eq("id",n);if(i)throw i;let p={...d().selectedInvoice,...s};t({selectedInvoice:p});const o=d().invoices.map(m=>m.id===n?{...m,...s}:m);t({invoices:o});const u=[...d().invoiceHistory];u.unshift({timestamp:new Date().toISOString(),action:"status_changed",details:{status:e}}),t({invoiceHistory:u})}catch(s){console.error("Error updating invoice status:",s),t({error:s.message})}finally{t({loading:!1})}},deleteInvoice:async n=>{try{t({loading:!0,error:null});const{error:e}=await l.from("invoice_items").delete().eq("invoice_id",n);if(e)throw e;const{error:r}=await l.from("invoices").delete().eq("id",n);if(r)throw r;const a=d().invoices.filter(c=>c.id!==n);t({invoices:a,selectedInvoice:null})}catch(e){console.error("Error deleting invoice:",e),t({error:e.message})}finally{t({loading:!1})}},recordPayment:async(n,e)=>{try{if(t({loading:!0,error:null}),!n)throw new Error("Invoice not found");const{data:r,error:a}=await l.from("invoices").select("id, status").eq("id",n).single();if(a)throw a;if(r.status==="paid")throw new Error("This invoice has already been paid");const{payment_date:c,payment_method:s,payment_reference:i,amount:p,is_partially_paid:o}=e,u={payment_date:c,payment_method:s,payment_reference:i,status:o?"partially_paid":"paid",is_partially_paid:o||!1,partially_paid_amount:o?p:void 0},{data:m,error:y}=await l.from("invoices").update(u).eq("id",n).select().single();if(y)throw y;const _=d().selectedInvoice;if(_&&_.id===n){const f={..._,...u};t({selectedInvoice:f})}const h=d().invoices,g=h.findIndex(f=>f.id===n);if(g>=0){const f=[...h];f[g]={...f[g],...u},t({invoices:f})}const I=[...d().invoiceHistory];return I.unshift({timestamp:new Date().toISOString(),action:"payment_recorded",details:{payment_date:e.payment_date,payment_method:e.payment_method,amount:e.amount,is_partially_paid:e.is_partially_paid}}),t({invoiceHistory:I}),m}catch(r){throw console.error("Error recording payment:",r),t({error:r.message}),r}finally{t({loading:!1})}}}));export{b as u};
